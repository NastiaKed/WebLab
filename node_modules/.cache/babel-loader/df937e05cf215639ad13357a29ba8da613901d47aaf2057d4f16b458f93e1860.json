{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY } from \"./actions\";\nconst initialCartState = {\n  cartItems: []\n};\nconst cartReducer = (state = initialCartState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.playload]\n      };\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.table.id !== action.playload)\n      };\n    case UPDATE_QUANTITY:\n      const updatedCartItems = state.cartItems.map(item => {\n        if (item, table.id === action.playload.tableId) {\n          return {\n            ...item,\n            quantitu: action.playload.quantitu\n          };\n        }\n        return item;\n      });\n      return {\n        ...state,\n        cartItems: updatedCartItems\n      };\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  cart: cartReducer\n});\nexport default rootReducer;\n\n// export const addToCartOperator = (state, action) => {\n//     const newCartItem = {\n//         ...action.tableToAdd,\n//     };\n//     const newCart = {\n//         ...state,\n//         cart: [...state.cart, newCartItem]\n//     };\n// }\n\n// export const deleteFromCartOperator = (state, action) => {\n//     const deletedItem = state.cart.find((book) => book.id === action.bookToDelete.id);\n\n//     if (!deletedItem) {\n//         return state;\n//     }\n\n//     const updatedCart = state.cart.filter((book) => book.id !== action.bookToDelete.id);\n\n//     return {\n//         ...state,\n//         cart: updatedCart,\n//         totalAmount: state.totalAmount - (deletedItem.initialPrice * deletedItem.countOfSameBooks),\n//         countOfCartItems: state.countOfCartItems - 1,\n//     };\n// };\n\n// export const addSameItem = (state, action) => {\n//     const updatedCart = state.cart.map((book) =>\n//         book.id === action.bookToUpdate.id\n//             ? {\n//                 ...book,\n//                 countOfSameBooks: book.countOfSameBooks + 1,\n//                 priceInUah: book.priceInUah + action.bookToUpdate.initialPrice,\n//             }\n//         : book\n//     );\n\n//     const updatedTotalAmount =\n//         state.totalAmount + action.bookToUpdate.initialPrice;\n\n//     return {\n//         ...state,\n//         cart: updatedCart,\n//         totalAmount: updatedTotalAmount,\n//         countOfCartItems: state.countOfCartItems + 1,\n//     };\n// };\n\n// export const deleteSameItem = (state, action) => {\n\n//     if (action.bookToUpdate.countOfSameBooks === 1) {\n//         return state\n//     }\n\n//     const updatedCart = state.cart.map((book) =>\n//         book.id === action.bookToUpdate.id && book.countOfSameBooks > 1\n//             ? {\n//                 ...book,\n//                 countOfSameBooks: book.countOfSameBooks - 1,\n//                 priceInUah: book.priceInUah - action.bookToUpdate.initialPrice,\n//             }\n//         : book\n//     );\n\n//     const updatedTotalAmount =\n//         state.totalAmount - action.bookToUpdate.initialPrice;\n\n//     return {\n//         ...state,\n//         cart: updatedCart,\n//         totalAmount: updatedTotalAmount,\n//         countOfCartItems: state.countOfCartItems - 1,\n//     };\n// };","map":{"version":3,"names":["combineReducers","ADD_TO_CART","REMOVE_FROM_CART","UPDATE_QUANTITY","initialCartState","cartItems","cartReducer","state","action","type","playload","filter","item","table","id","updatedCartItems","map","tableId","quantitu","rootReducer","cart"],"sources":["/Users/anastasiaked/my-app/src/Shopping/operator.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY } from \"./actions\";\n\nconst initialCartState = {\n    cartItems: [],\n};\n\nconst cartReducer = (state = initialCartState, action) => {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cartItems: [...state.cartItems, action.playload],\n            };\n        \n        case REMOVE_FROM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                    (item) => item.table.id !== action.playload\n                ),\n            };\n        \n        case UPDATE_QUANTITY:\n            const updatedCartItems = state.cartItems.map((item) => {\n                if (item,table.id === action.playload.tableId) {\n                    return {\n                        ...item,\n                        quantitu: action.playload.quantitu,\n                    };\n                }\n                return item;\n            });\n            return {\n                ...state,\n                cartItems: updatedCartItems,\n            };\n            default:\n                return state;\n            }\n        };\n\n    const rootReducer = combineReducers({\n        cart: cartReducer,\n    });\n\nexport default rootReducer;\n\n\n// export const addToCartOperator = (state, action) => {\n//     const newCartItem = {\n//         ...action.tableToAdd,\n//     };\n//     const newCart = {\n//         ...state,\n//         cart: [...state.cart, newCartItem]\n//     };\n// }\n\n// export const deleteFromCartOperator = (state, action) => {\n//     const deletedItem = state.cart.find((book) => book.id === action.bookToDelete.id);\n\n//     if (!deletedItem) {\n//         return state;\n//     }\n\n//     const updatedCart = state.cart.filter((book) => book.id !== action.bookToDelete.id);\n\n//     return {\n//         ...state,\n//         cart: updatedCart,\n//         totalAmount: state.totalAmount - (deletedItem.initialPrice * deletedItem.countOfSameBooks),\n//         countOfCartItems: state.countOfCartItems - 1,\n//     };\n// };\n\n// export const addSameItem = (state, action) => {\n//     const updatedCart = state.cart.map((book) =>\n//         book.id === action.bookToUpdate.id\n//             ? {\n//                 ...book,\n//                 countOfSameBooks: book.countOfSameBooks + 1,\n//                 priceInUah: book.priceInUah + action.bookToUpdate.initialPrice,\n//             }\n//         : book\n//     );\n\n//     const updatedTotalAmount =\n//         state.totalAmount + action.bookToUpdate.initialPrice;\n\n//     return {\n//         ...state,\n//         cart: updatedCart,\n//         totalAmount: updatedTotalAmount,\n//         countOfCartItems: state.countOfCartItems + 1,\n//     };\n// };\n\n// export const deleteSameItem = (state, action) => {\n\n//     if (action.bookToUpdate.countOfSameBooks === 1) {\n//         return state\n//     }\n\n//     const updatedCart = state.cart.map((book) =>\n//         book.id === action.bookToUpdate.id && book.countOfSameBooks > 1\n//             ? {\n//                 ...book,\n//                 countOfSameBooks: book.countOfSameBooks - 1,\n//                 priceInUah: book.priceInUah - action.bookToUpdate.initialPrice,\n//             }\n//         : book\n//     );\n\n//     const updatedTotalAmount =\n//         state.totalAmount - action.bookToUpdate.initialPrice;\n\n//     return {\n//         ...state,\n//         cart: updatedCart,\n//         totalAmount: updatedTotalAmount,\n//         countOfCartItems: state.countOfCartItems - 1,\n//     };\n// };"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,gBAAgB,EAAEC,eAAe,QAAQ,WAAW;AAE1E,MAAMC,gBAAgB,GAAG;EACrBC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,gBAAgB,EAAEI,MAAM,KAAK;EACtD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKR,WAAW;MACZ,OAAO;QACH,GAAGM,KAAK;QACRF,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAS,EAAEG,MAAM,CAACE,QAAQ;MACnD,CAAC;IAEL,KAAKR,gBAAgB;MACjB,OAAO;QACH,GAAGK,KAAK;QACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACM,MAAM,CAC5BC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAACC,EAAE,KAAKN,MAAM,CAACE,QACvC;MACJ,CAAC;IAEL,KAAKP,eAAe;MAChB,MAAMY,gBAAgB,GAAGR,KAAK,CAACF,SAAS,CAACW,GAAG,CAAEJ,IAAI,IAAK;QACnD,IAAIA,IAAI,EAACC,KAAK,CAACC,EAAE,KAAKN,MAAM,CAACE,QAAQ,CAACO,OAAO,EAAE;UAC3C,OAAO;YACH,GAAGL,IAAI;YACPM,QAAQ,EAAEV,MAAM,CAACE,QAAQ,CAACQ;UAC9B,CAAC;QACL;QACA,OAAON,IAAI;MACf,CAAC,CAAC;MACF,OAAO;QACH,GAAGL,KAAK;QACRF,SAAS,EAAEU;MACf,CAAC;IACD;MACI,OAAOR,KAAK;EAChB;AACJ,CAAC;AAEL,MAAMY,WAAW,GAAGnB,eAAe,CAAC;EAChCoB,IAAI,EAAEd;AACV,CAAC,CAAC;AAEN,eAAea,WAAW;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}