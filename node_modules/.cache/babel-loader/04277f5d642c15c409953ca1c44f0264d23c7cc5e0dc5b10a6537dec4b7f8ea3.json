{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiaked/my-app/src/containers/MainCatalog/MainCatalog.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport CardItem from \"../../components/CardItem/CardItem\";\nimport { useState, useEffect } from \"react\";\nimport { getAllTables, getFilteredTables } from \"../../server\";\nimport { CardWrapper } from \"../Home/Home.styled\";\nimport CircleLoader from \"../App/CircleLoader/CircleLoader\";\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainCatalog = ({\n  filters,\n  tablesList\n}) => {\n  _s();\n  const [filtersApplied, setFiltersApplied] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filteredTables, setFilteredTables] = useState(tablesList);\n  const handleApplyFilter = () => {\n    setFiltersApplied(true);\n  };\n  useEffect(() => {\n    const fetchFilterTables = async () => {\n      try {\n        console.log(filters);\n        const result = await getFilteredTables(filters);\n        console.log(result);\n        setFilteredTables(result);\n        setFiltersApplied(false);\n      } catch (error) {\n        console.error(\"filtering error:\", error);\n      }\n    };\n    if (filtersApplied) {\n      fetchFilterTables();\n      setFiltersApplied(false);\n    }\n  }, [filters, filtersApplied]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"right\",\n        marginBottom: 80,\n        marginRight: 150\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleApplyFilter,\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n      children: filteredTables.map(table => /*#__PURE__*/_jsxDEV(CardItem, {\n        title: table.title,\n        text: table.text,\n        image: table.image,\n        price: table.price,\n        size: table.size,\n        color: table.color,\n        id: table.id\n      }, table.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n_s(MainCatalog, \"lDaraAE1gLbLoumZFH4OAfQowOw=\");\n_c = MainCatalog;\nexport default MainCatalog;\nvar _c;\n$RefreshReg$(_c, \"MainCatalog\");","map":{"version":3,"names":["React","CardItem","useState","useEffect","getAllTables","getFilteredTables","CardWrapper","CircleLoader","Button","jsxDEV","_jsxDEV","MainCatalog","filters","tablesList","_s","filtersApplied","setFiltersApplied","isLoading","setIsLoading","filteredTables","setFilteredTables","handleApplyFilter","fetchFilterTables","console","log","result","error","children","style","display","justifyContent","marginBottom","marginRight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","table","title","text","image","price","size","color","id","_c","$RefreshReg$"],"sources":["/Users/anastasiaked/my-app/src/containers/MainCatalog/MainCatalog.js"],"sourcesContent":["import React from \"react\";\nimport CardItem from \"../../components/CardItem/CardItem\";\nimport { useState, useEffect } from \"react\";\nimport { getAllTables, getFilteredTables} from \"../../server\";\nimport { CardWrapper } from \"../Home/Home.styled\";\nimport CircleLoader from \"../App/CircleLoader/CircleLoader\";\nimport {Button} from \"antd\";\n\nconst MainCatalog = ({filters, tablesList})=>{\n    const [filtersApplied,setFiltersApplied] = useState(true)\n    const [isLoading, setIsLoading] = useState(false);\n    const [filteredTables, setFilteredTables] = useState(tablesList);\n\n    const handleApplyFilter = () => {\n        setFiltersApplied(true)\n    }\n\n    useEffect(() => {\n        \n        const fetchFilterTables = async () => {\n            try {\n                console.log(filters)\n                const result = await getFilteredTables(filters);\n                console.log(result)\n                setFilteredTables(result);\n                setFiltersApplied(false)\n            } catch (error) {\n                console.error(\"filtering error:\", error);\n            }\n        };\n\n        if (filtersApplied) {\n            fetchFilterTables();\n            setFiltersApplied(false)\n        }\n    }, [filters, filtersApplied]);\n\n        return(\n\n            <div>\n                <div style={{display: \"flex\", justifyContent: \"right\", marginBottom: 80, marginRight: 150}}>\n                    <Button onClick={handleApplyFilter}>Apply</Button>\n                </div>\n\n            <CardWrapper>\n            {filteredTables.map((table)=>(\n                <CardItem \n                    key={table.id}\n                    title={table.title}\n                    text={table.text}\n                    image = {table.image}\n                    price={table.price}\n                    size={table.size}\n                    color={table.color}\n                    id={table.id}\n                />\n            ))}\n            </CardWrapper>\n            {isLoading ?<CircleLoader/>:\"\"}\n        </div>\n    )\n}\n\nexport default MainCatalog"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}